stages:          # List of stages for jobs, and their order of execution
  - linting
  - doc
  - light-testing
  - heavy-testing
  - release

default:
    image: ${CI_DEPENDENCY_PROXY_DIRECT_GROUP_IMAGE_PREFIX}/node:gallium-alpine3.15

lint-job:
    stage: linting
    before_script:
        - echo 'Performing lint-job...'
        - npm install eslint --save-dev
    script:
        - npm run lint
    after_script:
        - echo 'lint-job is done !'

doc-coverage-job:
    stage: doc
    before_script: 
        - npm i --frozen-lockfile # Install frozen lockfile
        - mkdir -p stories # Create mandatory stories folder, we don't know why it's mandatory, and what it does, but it is.
    script: 
        - npm run doc-coverage # Run code coverage
    coverage: /.*coveragePercentage.*\'(\d*\.?\d*)\%\'.*/
        
unit-test-job: 
    stage: light-testing
    before_script:
        - npm install --frozen-lockfile
    script:
        - npm run coverage
        - npm run report
        - npm run report-coverage
    coverage: /All files\s*\|\s*([\d\.]+)/
    artifacts:
        when: always
        reports:
            junit:
                - junit.xml
            cobertura: coverage/cobertura-coverage.xml

funct-testing:
    stage: heavy-testing
    allow_failure: true  # to remove once fully implemented
    script:
        - echo todo
        - 'false'

bundle-code-job:
    stage: release
    before_script:
        - echo 'install dependencies...'
        - npm install --frozen-lockfile
    script:
        - echo 'run build...'
        - npm run build
    after_script:
        - echo 'bundle-code-job is done !'

bundle-doc-job:
    stage: release
    before_script:
        - echo 'generating jsDoc...'
        - npm install jsdoc --save-dev
    script:
        - npm run doc
    after_script:
        - echo 'doc-job is done !'


